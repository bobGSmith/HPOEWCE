% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/proportion_of_expected_phenos_by_significance_plot.R
\name{proportion_of_expected_enrichments_plot}
\alias{proportion_of_expected_enrichments_plot}
\title{Proportion of expected enrichments in a cell type by significance plot}
\usage{
proportion_of_expected_enrichments_plot(
  all_results_merged,
  hpo,
  target_cells = c("Excitatory neurons", "Limbic system neurons"),
  cell_type_description = "Neuronal cells",
  HPO_Ids = ontologyIndex::get_descendants(hpo,
    hpo$id[match("Abnormality of the nervous system", hpo$name)]),
  phenotype_description = "Nervous system phenotypes",
  wes_color_palette = "Darjeeling1",
  n_colors = 4,
  color_expected_phenotypes = 1,
  color_other_phenotypes = 4
)
}
\arguments{
\item{all_results_merged}{Rare disease EWCE results <data.frame>}

\item{hpo}{The HPO data object from ontologyIndex package}

\item{target_cells}{vector of target cell names <vector<string>>}

\item{cell_type_description}{a description of the target cells
(e.g. "Cells of the nervous system") <string>}

\item{HPO_Ids}{vector of HPO Ids of expected phenotypes <vector<string>>}

\item{phenotype_description}{a description of the expected phenotypes
(e.g. "Nervous system abnormalities") <string>}

\item{wes_color_palette}{a color palette from wesanderson package <string>}

\item{n_colors}{The number of colors to select from the palette
(see docs for wesanderson package) <int>}

\item{color_expected_phenotypes}{The index of the color from the selected
palette that you want to represent expected phenotypes <int>}

\item{color_other_phenotypes}{The index of the color from selected palette
that you want to represent other phenotypes <int>}
}
\description{
This allows you to select a group of phenotypes by from a particular HPO
branch (or selection of phenotypes) and a cell type (or collection of cells)
that you expected is often associated with that phenotype.
The plot produced shows the proportion of enrichments in that cell type that
are from the expected branch at different levels of significance.
Typically as you go towards more significant
phenotypes, you would expecte a higher number of them to be from the
expected branch. E.g. we may see many "Abnormality of the nervous system"
sub-phenotypes significantly enriched in excitatory neurons.
}
\examples{
\dontrun{
# Single plot using multiple related cell types,
# note "[[1]]" is to select the plot.
proportion_of_expected_enrichments_plot(all_results_merged,
target_cells=c("Excitatory neurons","Limbic system neurons"),
cell_type_description = "Neuronal cells",
HPO_Ids = ontologyIndex::get_descendants(
  hpo,hpo$id[match("Abnormality of the nervous system",hpo$name)]),
phenotype_description = "Nervous system phenotypes",
wes_color_palette="Darjeeling1",
n_colors = 4,
color_expected_phenotypes = 1,color_other_phenotypes = 4)[[1]]

# Plot multiple facted plots and run pearsons correlation on pvalue~n expected phenos
plot_branches = c("Abnormality of the nervous system",
                  "Abnormality of the cardiovascular system",
                  "Abnormality of the immune system")
expected_cells = c("Excitatory neurons",
                   "Cardiomyocytes",
                   "Antigen presenting cells")
correlation_results = data.frame()
proportion_plots = list()
for (i in seq(length(plot_branches))) {
  cur_plot <- proportion_of_expected_enrichments_plot(all_results_merged,
                                                      target_cells=c(expected_cells[i]),
                                                      cell_type_description = expected_cells[i],
                                                      HPO_Ids = ontologyIndex::get_descendants(
                                                      hpo,hpo$id[match(plot_branches[i],hpo$name)]),
                                                      phenotype_description = plot_branches[i],
                                                      wes_color_palette="Darjeeling1",
                                                      n_colors = 4,
                                                      color_expected_phenotypes = i,
                                                      color_other_phenotypes = 4)
  proportion_plots[[i]] = cur_plot[[1]]
  correlation_results = rbind(correlation_results,cur_plot[[2]])
}
print(cowplot::plot_grid(
plotlist=proportion_plots, align = "h",nrow = 1,labels=c("A","B","C")))
pearsons_expected = cor.test(
correlation_results$minus_log_p[correlation_results$cur_branch != "Other"],
correlation_results$prop[correlation_results$cur_branch != "Other"],method="pearson")
}
}
